version: "3.3"

services:
  api:
    build:
      context: .
    image: webhooks
    env_file: .env
    environment:
      SERVICES: api
      PORT: 8000
    depends_on:
      - nats
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api-gw.rule=PathPrefix(`/`)"
      - "traefik.http.services.api-gw.loadbalancer.server.port=8000"
    networks:
      - internal

  webhooks:
    build:
      context: .
    image: webhooks
    env_file: .env
    environment:
      SERVICES: webhooks
    depends_on:
      - postgres
      - nats
    networks:
      - internal

  postgres:
    image: "postgres:12.2-alpine"
    container_name: postgres
    restart: always
    ports:
      - 5432:5432
    env_file: .env
    environment:
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - data:/data/db
    labels:
      - traefik.enable=false
    networks:
      - internal

  nats:
    image: nats:2
    networks:
      - internal

  traefik:
    image: traefik:v2.1
    command:
      - "--api.insecure=true" # Don't do that in production!
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
    ports:
      - "80:80"
      - "443:443"
      - "8000:8000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - internal
      - default

networks:
  internal:

volumes:
  data:
